package club.koupah.logchecker.impl;

import java.io.File;
import java.util.List;

import club.koupah.logchecker.Checker;
import club.koupah.logchecker.utils.Utils;

public class LunarChecker extends Checker {

	public LunarChecker() {
		super("Check Lunar Client logs");
	}

	@Override
	public void check() {
		File lunarLogs = new File("C:\\Users\\" + System.getProperty("user.name") + "\\.lunarclient\\offline");

		if (lunarLogs.exists() && lunarLogs.isDirectory()) {
			System.out.println("Lunar Logs directory: \"" + lunarLogs.getAbsolutePath() + "\"");

			System.out.println("Press Enter to start scanning!");
			Utils.waitForEnter();

			spacer();
			System.out.println("Log scanning has begun...");
			System.out.println(" - Note: This can take anywhere from 10 seconds to 2 minutes");
			spacer();

			int logsChecked = 0;
			int foldersChecked = 0;
			int exploits = 0;

			contents: for (File file : lunarLogs.listFiles()) {

				if (!file.isDirectory() || !file.getName().contains(".")) // Versions all contain a '.'
					continue;

				if (Utils.containsFolder(file, "logs")) {

					System.out.println("Checking logs for Lunar Client v" + file.getName() + "...");
					File verLogs = new File(file, "logs");

					List<File> containing = Utils.checkAllFiles(verLogs);

					if (containing.isEmpty()) {
						System.out.println("Lunar Client v" + file.getName() + " logs are clean.");
					} else {
						System.out.println("Use of the Log4J exploit was found in " + containing.size()
								+ " log files for Lunar Client v" + file.getName() + "!");
						System.out.println("Would you like to view a list of all the files that potentially contain the exploit?");

						if (Utils.getBooleanInput()) {
							System.out.println("------------");
							for (File exploitInside : containing)
								System.out.println("- " + exploitInside.getAbsolutePath());
							System.out.println("------------");
							System.out.println(" ");
						}

						exploits += containing.size();

						System.out.println("Do you want to continue searching Lunar Client logs?");
						if (!Utils.getBooleanInput()) {
							break contents;
						}
					}

					foldersChecked++;
					logsChecked += verLogs.listFiles().length;

				} else {
					System.out.println("Skipping Lunar Client v" + file.getName() + " as it has no logs folder.");
				}

			}

			System.out.println("Lunar Client log scanning has completed.");
			System.out.println("Results: ");
			System.out.println(" - Checked: " + logsChecked + " log files in " + foldersChecked + " folders");
			System.out.println(" - Potential Exploit: " + exploits + " log files that potentially contain the exploit");

			printExplanation(exploits, "on Lunar Client");

		} else {
			System.out.println("Lunar Client logs folder does not appear to exist! (" + lunarLogs.getAbsolutePath() + ")");
			System.out.println("Please make sure you've actually played Lunar Client!");
		}

		returnHome();
	}
	
}
