package club.koupah.logchecker;

import java.io.File;
import java.util.List;
import java.util.Scanner;

import club.koupah.logchecker.utils.Utils;

public class ExploitChecker {

	public static final String exploitString = "jndi:ldap";

	public static ExploitChecker INSTANCE;
	public static String typicalFolderName = ".minecraft";

	public Scanner input = new Scanner(System.in);

	public static void main(String[] args) {
		System.out.println("Initializing MC Exploit Checker with " + args.length + " provided argument(s).");
		new ExploitChecker(args);
	}

	String minecraftDirectory;
	File minecraftFolder;

	public ExploitChecker(String[] args) {
		INSTANCE = this;
		if (args.length > 0) {
			minecraftDirectory = args[0];
		} else {
			if (Utils.isWindows()) {
				System.out.println("Using Default .minecraft Folder location as one hasn't been specified.");
				minecraftDirectory = System.getenv("APPDATA") + File.separator + typicalFolderName;
			} else {
				throw new RuntimeException(
						"You cannot run this program on a non Windows OS without specifying a .minecraft directory!");
			}
		}

		System.out.println("Set Minecraft Directory to \"" + minecraftDirectory + "\"");
		minecraftFolder = new File(minecraftDirectory);

		if (!minecraftFolder.exists()) {
			System.out.println("Note: The above Minecraft Directory does not appear to exist!");
		}

		for (int i = 0; i < 2; i++)
			System.out.println(" ");

		System.out.println(
				"Would you like to input a different Minecraft directory? (Currently: " + minecraftDirectory + ")");
		boolean changeDir = Utils.getBooleanInput();

		if (changeDir) {
			System.out.println("Please provide a Directory for your .minecraft Folder!");
			minecraftFolder = Utils.getDirectoryInput();
			minecraftDirectory = minecraftFolder.getAbsolutePath();
			System.out.println("Set Minecraft Directory to \"" + minecraftDirectory + "\"!");
		}

		System.out.println(" ");

		System.out.println("Press Enter to start scanning!");
		Utils.waitForEnter();

		if (Utils.containsFolder(minecraftFolder, "logs")) {

			System.out.println("Log scanning has begun...");
			System.out.println(" - Note: This can take anywhere from 10 seconds to 2 minutes");

			File logs = new File(minecraftFolder, "logs");
			List<File> containing = Utils.checkAllFiles(logs);

			System.out.println(" ");

			System.out.println("Log scanning has completed.");
			System.out.println("Results: ");
			System.out.println(" - Checked: " + logs.listFiles().length + " log files");
			System.out.println(" - Exploit: found in " + containing.size() + " log files");

			System.out.println(" ");
			System.out.println("What does this mean?");

			if (containing.isEmpty()) {
				System.out.println(
						"This means that it doesn't appear that you have been impacted by or exposed to this exploit.");
			} else {
				System.out.println("You should investigate the log files containing the exploit for some context!");
				System.out.println("If you're unsure, or need help, contact someone who you believe is knowledgeable.");

				System.out.println(" ");
				System.out.println("Would you like to view a list of all the files containing the exploit?");

				if (Utils.getBooleanInput()) {
					System.out.println("------------");
					for (File file : containing)
						System.out.println("- " + file.getAbsolutePath());
					System.out.println("------------");
					System.out.println(" ");
				}

			}

			System.out.println("Feel free to contact me on Discord (Koupah#5129), Github (Koupah) or Twitter (@Koupahs).");

		} else {
			System.out.println("Your Minecraft Folder doesn't contain a folder called \"logs\" in it!");
			System.out
					.println("If this is a mistake, please re-run this utility and specify a custom Minecraft Directory!");
		}

		System.out.println(" ");
		System.out.println("Press Enter to exit.");
		Utils.waitForEnter();
	}

	public static Scanner getInput() {
		return INSTANCE.input;
	}

	public static ExploitChecker getInstance() {
		return INSTANCE;
	}

	public static String getMinecraftDirectory() {
		return getInstance().minecraftDirectory;
	}

}
